/*
 * -------------------------------------------------
 * Iris config
 * -------------------------------------------------
 * Pipeline parameters specific to running MEDICC2-sitkasegs with Slurm on the Iris cluster at MSKCC
 * -------------------------------------------------
 */

executor {
  name = "slurm"
  queueSize = 1000000
  perJobMemLimit = true
}

params {
  // Limit resources so that this can run CI
  max_cpus   = 24
  max_memory = 128.GB
  max_time   = 240.h
  maxErrorRetry = 3
}


process {
    queue = 'componc_cpu'

    withName: 'GENERATE_MEDICC_INPUT' {
        time = { 6.h + 6.h * (task.attempt - 1) }
        memory = { 32.GB + 16.GB * (task.attempt - 1) }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC:START_MEDICC_PARALLEL' {
        time = { 6.h + 6.h * (task.attempt - 1) }
        memory = 32.GB
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC:RUN_MEDICC_TASK' {
        time = { 6.h + 18.h * (task.attempt - 1) }
        memory = { 4.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC:FINISH_MEDICC_PARALLEL' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: 'PLOT_MEDICC_RESULTS' {
        time = { 6.h + 6.h * (task.attempt - 1) }
        memory = 32.GB
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }

    withName: 'MEDICC_SITKA:CONVERT_SITKA_TREE' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:GENERATE_MEDICC_INPUT' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:RUN_MEDICC_WITH_TREE' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: 'MEDICC_SITKA:PLOT_MEDICC_RESULTS' {
        time = 2.h
        memory = 32.GB
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }

    withName: 'MEDICC_SITKA:CONVERT_SITKA_TREE' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:GENERATE_MEDICC_INPUT' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:RUN_MEDICC_WITH_TREE' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB + 128.GB * (task.attempt - 1) }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC_SITKA:PLOT_MEDICC_RESULTS' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }

    withName: 'MEDICC_SITKA:CONVERT_SITKA_TREE' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:GENERATE_MEDICC_INPUT' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:RUN_MEDICC_WITH_TREE' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 3
    }
    withName: 'MEDICC_SITKA:PLOT_MEDICC_RESULTS' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }

    withName: 'MEDICC_SITKA:CONVERT_SITKA_TREE' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:GENERATE_MEDICC_INPUT' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:RUN_MEDICC_WITH_TREE' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC_SITKA:PLOT_MEDICC_RESULTS' {
        time = 2.h
        memory = 32.GB
        cpus = 1
    }
    withName: 'MEDICC_SITKA:MEDICC:FINISH_MEDICC_PARALLEL' {
        time = { 32.h + 48.h * (task.attempt - 1) }
        memory = { 64.GB * task.attempt }
        cpus = 1
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: 'MEDICC_SITKA:MEDICC:RUN_MEDICC_SERIAL' {
        time = { 24.h + 24.h * (task.attempt - 1) }
        memory = { 64.GB + 32.GB * (task.attempt - 1) }
        cpus = 24
        errorStrategy = 'retry'
        maxRetries = 3
    }
}

